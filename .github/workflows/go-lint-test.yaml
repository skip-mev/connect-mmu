name: Go Lint and Test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  golangci:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23.0
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          only-new-issues: true
          args: --timeout 8m0s --verbose

  lint-markdown:
    name: Lint markdown
    runs-on: ubuntu-latest
    needs: golangci
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Lint markdown
        uses: avto-dev/markdown-lint@v1
        with:
          args: "**/*.md"

  unit_tests:
    name: "Unit tests"
    runs-on: ubuntu-latest
    needs: golangci
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.23
      - name: Test
        run: go test -cover -coverprofile=coverage.txt ./...
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage.txt

  code_coverage:
    name: "Code coverage report"
    if: github.event_name == 'pull_request' # Do not run when workflow is triggered by push to main branch
    runs-on: ubuntu-latest
    needs: unit_tests
    steps:
      - uses: fgrosse/go-coverage-report@v1.2.0
        with:
          coverage-artifact-name: "code-coverage"
          coverage-file-name: "coverage.txt"
